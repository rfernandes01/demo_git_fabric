table calendario
	lineageTag: bd4b8a92-492b-4775-8870-a3ca61f8aea7
	dataCategory: Time

	column Data
		dataType: dateTime
		isKey
		formatString: dd/mm/yy
		lineageTag: 3e2563f3-6296-4af6-9ec9-161641b05824
		summarizeBy: none
		sourceColumn: Data

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

		annotation PBI_FormatHint = {"isDateTimeCustom":true}

	column Ano
		dataType: int64
		formatString: 0
		lineageTag: 95e3ec0c-3841-45ff-bad9-9541e7d8a40f
		summarizeBy: none
		sourceColumn: Ano

		annotation SummarizationSetBy = User

	column MesAno
		dataType: string
		lineageTag: 04d19fca-2eb0-4af8-94aa-ab07edc28952
		summarizeBy: none
		sourceColumn: MesAno
		sortByColumn: MesInicio

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	column MesInicio
		dataType: dateTime
		formatString: Long Date
		lineageTag: 6d70a833-23c7-4d88-9f31-49603b54c48d
		summarizeBy: none
		sourceColumn: MesInicio

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	partition calendario = m
		mode: import
		queryGroup: Dimensoes
		source = ```
				let
				    dataInicial = data_inicial, 
				    dataFinal = data_final, 
				    
				    datas = List.Dates(
				        dataInicial, 
				        Duration.Days(dataFinal-dataInicial) + 1, 
				        #duration(1, 0, 0, 0)
				    ),
				
				    calendario = #table(
				        type table[
				            Data = date,
				            Ano = Int64.Type,
				            MesAno = text,
				            MesInicio = date
				        ],
				        List.Transform(
				            datas,
				            each {
				                _,
				                Date.Year(_),
				                Date.ToText(_, [Format="MMM/yy", Culture="pt-BR"]),
				                Date.StartOfMonth(_)
				            }
				        )
				    )
				
				in
				    calendario
				```

	annotation PBI_NavigationStepName = Navegação

	annotation PBI_ResultType = Table

